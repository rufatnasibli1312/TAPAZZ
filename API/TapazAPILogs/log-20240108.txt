2024-01-08 00:01:58.935 +04:00 [ERR] CategoryService.Delete - Validation failed. Errors: 'Id' must not be equal to '0'.
2024-01-08 00:01:58.968 +04:00 [ERR] CategoryService.Delete - Validation failed-'Id' must not be equal to '0'..
2024-01-08 00:02:19.986 +04:00 [ERR] CategoryService.Delete - Validation failed. Errors: 'Id' must not be equal to '0'.
2024-01-08 00:02:19.986 +04:00 [ERR] CategoryService.Delete - Validation failed-'Id' must not be equal to '0'..
2024-01-08 00:02:46.165 +04:00 [ERR] CategoryService.Delete - Validation failed. Errors: 'Id' must not be equal to '0'.
2024-01-08 00:04:59.104 +04:00 [ERR] LocationService.Delete - Validation failed. Errors: 
2024-01-08 00:05:45.953 +04:00 [ERR] LocationService.Delete - Validation failed. Errors: 
2024-01-08 00:06:12.268 +04:00 [ERR] LocationService.Delete - InvalidOperationException:Errors: Category not found 
2024-01-08 00:06:12.290 +04:00 [ERR] LocationService.Delete - Category not found 
2024-01-08 00:06:18.450 +04:00 [INF] LocationService.Delete - Location Deleted successfully. Id: {"Id":47}
2024-01-08 00:07:10.649 +04:00 [ERR] LocationService.Delete - Validation failed. Errors: 
2024-01-08 00:07:24.516 +04:00 [ERR] LocationService.Delete - Validation failed. Errors: 
2024-01-08 00:07:56.922 +04:00 [ERR] CategoryService.Delete - Validation failed. Errors: 'Id' must not be equal to '0'.
2024-01-08 00:07:56.947 +04:00 [ERR] CategoryService.Delete - Validation failed-'Id' must not be equal to '0'..
2024-01-08 00:08:03.072 +04:00 [ERR] LocationService.Delete - Validation failed. Errors: 
2024-01-08 00:08:35.984 +04:00 [ERR] LocationService.Delete - Validation failed. Errors: 
2024-01-08 00:09:58.073 +04:00 [INF] LocationService.AddAsync - Location added successfully. Data: {"Name":"string"}
2024-01-08 00:10:02.211 +04:00 [ERR] LocationService.AddAsync - Validation failed. Errors: Location name cannot be empty
2024-01-08 00:10:08.714 +04:00 [ERR] LocationService.Delete - Validation failed. Errors: 
2024-01-08 00:12:30.126 +04:00 [ERR] CategoryService.Delete - Validation failed. Errors: 'Id' must not be equal to '0'.
2024-01-08 00:16:47.797 +04:00 [ERR] CategoryService.GetAsync - Category not found. ID: 100
2024-01-08 00:21:41.096 +04:00 [ERR] CategoryService.GetAsync - Category not found. ID: 30
2024-01-08 00:22:14.968 +04:00 [INF] LocationService.GetAsync - Location Get successfully.  ID: 30
2024-01-08 00:22:26.039 +04:00 [ERR] CategoryService.GetAsync - Category not found. ID: 100
2024-01-08 00:32:06.072 +04:00 [INF] LocationService.GetAllAsync - Locations Get successfully
2024-01-08 00:36:47.557 +04:00 [ERR] LocationService.GetProductsWithLocationId - Products not found
2024-01-08 00:37:36.494 +04:00 [INF] AccountController.Login({"Email":"inci@gmail.com","Password":"Rufat123"}
2024-01-08 00:38:20.477 +04:00 [INF] ProductController.CreateProduct({"Name":"Iphone 15","Description":"qara rengde","IsNew":true,"IsDelivered":true,"Price":3000,"Photos":[{"ContentType":"image/jpeg","ContentDisposition":"form-data; name=\u0022Photos\u0022; filename=\u0022Image 5.jpg\u0022","Headers":{"Content-Disposition":["form-data; name=\u0022Photos\u0022; filename=\u0022Image 5.jpg\u0022"],"Content-Type":["image/jpeg"]},"Length":1408668,"Name":"Photos","FileName":"Image 5.jpg"}],"LocationId":30,"CategoryId":55})
2024-01-08 00:38:53.143 +04:00 [INF] LocationService.GetProductsWithLocationId - Products Get successfully with this 30
2024-01-08 00:39:27.594 +04:00 [INF] LocationService.GetProductsWithLocationId - Products Get successfully with this 29
2024-01-08 00:44:23.502 +04:00 [ERR] LocationService.GetAsync - The expression 'm.LocationId' is invalid inside an 'Include' operation, since it does not represent a property access: 't => t.MyProperty'. To target navigations declared on derived types, use casting ('t => ((Derived)t).MyProperty') or the 'as' operator ('t => (t as Derived).MyProperty'). Collection navigation access can be filtered by composing Where, OrderBy(Descending), ThenBy(Descending), Skip or Take operations. For more information on including related data, see http://go.microsoft.com/fwlink/?LinkID=746393.
2024-01-08 00:45:54.459 +04:00 [ERR] LocationService.GetProductsWithLocationId - Products not found
2024-01-08 00:46:10.179 +04:00 [ERR] LocationService.GetProductsWithLocationId - Products not found
2024-01-08 00:46:46.729 +04:00 [ERR] LocationService.GetProductsWithLocationId - Products not found
2024-01-08 00:47:06.540 +04:00 [ERR] LocationService.GetAsync - Error mapping types.

Mapping types:
List`1 -> List`1
System.Collections.Generic.List`1[[Entity.Entities.Product, Entity, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]] -> System.Collections.Generic.List`1[[DTO.LocationDto_s.LocationAddProductsGetDTO, DTO, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]
2024-01-08 00:47:14.525 +04:00 [ERR] LocationService.GetAsync - Error mapping types.

Mapping types:
List`1 -> List`1
System.Collections.Generic.List`1[[Entity.Entities.Product, Entity, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]] -> System.Collections.Generic.List`1[[DTO.LocationDto_s.LocationAddProductsGetDTO, DTO, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]
2024-01-08 00:48:37.910 +04:00 [ERR] LocationService.GetAsync - Error mapping types.

Mapping types:
List`1 -> List`1
System.Collections.Generic.List`1[[Entity.Entities.Product, Entity, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]] -> System.Collections.Generic.List`1[[DTO.LocationDto_s.LocationAddProductsGetDTO, DTO, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]
2024-01-08 00:48:45.326 +04:00 [ERR] LocationService.GetProductsWithLocationId - Products not found
2024-01-08 00:48:49.006 +04:00 [ERR] LocationService.GetAsync - Error mapping types.

Mapping types:
List`1 -> List`1
System.Collections.Generic.List`1[[Entity.Entities.Product, Entity, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]] -> System.Collections.Generic.List`1[[DTO.LocationDto_s.LocationAddProductsGetDTO, DTO, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]
2024-01-08 00:49:55.280 +04:00 [ERR] LocationService.GetAsync - Error mapping types.

Mapping types:
List`1 -> List`1
System.Collections.Generic.List`1[[Entity.Entities.Product, Entity, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]] -> System.Collections.Generic.List`1[[DTO.LocationDto_s.LocationAddProductsGetDTO, DTO, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]
2024-01-08 00:50:26.571 +04:00 [INF] LocationService.GetProductsWithLocationId - Products Get successfully with this 30
2024-01-08 00:50:56.092 +04:00 [INF] LocationService.GetProductsWithLocationId - Products Get successfully with this 30
2024-01-08 00:53:39.515 +04:00 [INF] LocationService.GetProductsWithLocationId - Products Get successfully with this 30
2024-01-08 00:55:34.432 +04:00 [ERR] LocationService.GetProductsWithLocationId - Products not found
2024-01-08 00:55:52.124 +04:00 [ERR] LocationService.GetProductsWithLocationId - Products not found
2024-01-08 00:56:30.056 +04:00 [ERR] LocationService.GetProductsWithLocationId - Products not found
2024-01-08 01:04:03.594 +04:00 [ERR] LocationService.GetProductsWithLocationId - Products not found
2024-01-08 01:04:07.293 +04:00 [INF] LocationService.GetProductsWithLocationId - Products Get successfully with this 30
2024-01-08 01:04:10.751 +04:00 [ERR] LocationService.GetProductsWithLocationId - Location not found 
